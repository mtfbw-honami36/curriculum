■ IT
IT:コンピューターやデータ通信を利用した技術の総称（Information Technology）

ICT:通信技術を活用したコミュニケーションのこと。ITとほぼ同じ意味として使われる。ITは情報伝達技術そのものを指し、ICTは情報伝達技術の活用方法やその方法論といったものを指す。(Information and Communication Technology)

IoT:コンピュータなどの情報・通信機器だけで無く、世の中に存在する様々な物をインターネットでつなぐこと。物にセンサーをつけ、センサーが取得した情報を活用できるようにすること。


■ OS
OS:システム全体を管理し、さまざまなアプリケーションを動かすための最も基本的なソフトウェア。そのため、パソコンにOSが入っていないとパソコンを動かすことができない。

Windows:マイクロソフト社が開発したOS。

macOS (Mac OS X):アップルが開発したOS。

UNIX:現存するOSの中で最も古い。様々なOSの土台になったOS。安全性が高く、余計な機能が少ないので軽い。そして安い。カーナビや携帯電話などにも使われている。Unixは知的財産権が企業に属している。

Linux:安定的に動いて、費用がかからない。Androidなどに使われている。Linuxはオープンソースで無料、改変や配布も自由。


■ 言語・環境
マークアップ／フロントエンド:文章を構造化し、コンピューターがタイトルや見出しなどの文章構成要素を正しく認識できるようにするための作業をマークアップという。ユーザーが見ているWebサイトの見た目部分をフロントエンドという。

HTML:ハイパーテキスト（リンクなどを埋め込める文章）をマークアップできる言語。

CSS:HTMLで作成した文章などを装飾するための言語。文字に色をつけたり、文字や要素の大きさを変えたりできる。

JavaScript:HTMLに動きをつけるための言語。カーソルが乗ると色が変わる、クリックすると見た目が変わるなど。


サーバーサイド:サーバー側で動くプログラム

.NET（C#, VB）:主にMicrosoft.NET Frameworkというアプリケーション、または開発環境を指す単語。WindowsのシステムやWebサービス開発に利用され、Windows7以降のOSではデフォルトで搭載されている。

Java:OSに依存しないため汎用性が高く、どんな環境でもソフトを動かすことができる。多くの現場で使用されている。コンパイラ言語なので、処理速度が速い。セキュリティーコントロールも簡単。マイクラもJavaで開発されている。

Java SE:Javaの基本機能をまとめたもの。Androidを搭載したスマホアプリを作る際にJavaSEの導入が必須になる。

Java EE（Jakarta EE）:JavaSEを元にしてサーバーサイドの機能を追加したもの。

Perl:Webサーバー上で動作するCGIと呼ばれることもあるが、文字処理機能にも優れているのでテキスト操作にも強い。

PHP:PHPはPerlと比べ、書籍なども多く学びやすい。世の中のほとんどのレンタルサーバーで使えて、データベースとの連携が必要なWebアプリケーションを開発するのに適している。しかし、Webアプリケーション全般に関する知識が少ないとセキュリティー面に脆弱性が埋め込まれてしまう危険性がある。

Ruby:コンパイルが不要なので手軽に開発ができる。オブジェクト指向の言語なので、コードを書く量を少なくすることができ読みやすくなる。Railsというフレームワークを使うことでWebサービスを効率良く開発することができる。


■ サーバーソフト
Apache:オープンソースなので開発者が多くApacheで扱うことのできる機能が豊富で、幅広い動作環境に対応している。主要なLinux OSに採用されているため、世界的に広く普及している。全世界のおよそ40％のシェア。1995年にリリースされた。

nginx:オープンソースなので自由に機能を開発できる。大容量のデータを処理することを想定して開発されているので、大量処理が得意。メモリを効率的に使用できるので、処理速度が非常に早い。キャッシュサーバーが不要でHTMLや画像などをキャッシュできるので、静的コンテンツを扱うのに適している。設定が簡単。2002年リリース。

IIS:マイクロソフトが作ったサーバーソフト。Windowsに特化している。情報表示にグラフィックを多用しているので、命令文を打ち込む必要がなく、直感的に操作可能。


■ SQL
SQL:プログラミング言語では無く、データベースを操作するための言語。

DB2:IBMが開発・販売するデータベース管理システムの一つ。AIが組み込まれ、AIを生み出すためにデザインされたデータベース。

MySQL:オープンソースのリレーショナルデータベース管理システム。Oracleによって開発・ソースコードを管理されている。

Maria DB:MySQLから派生してできた。MySQLよりも処理が若干早い。高い拡張性・処理性能・高品質が高く評価されている。その使いやすさから急速に普及しつつある。

Oracle DB:Oracle社が開発・販売しているリレーショナルデータベース管理システム。データの操作にはSQL言語を使用する。

PostgreSQL:拡張性とSQL準拠を強調するフリーでオープンソースの関係データベース管理システム。

SQLite:サーバとしてではなくアプリケーションに組み込んで利用されるデータベース。 一般的なRDBMSと違い、APIは単純にライブラリを呼び出すだけであり、データの保存に単一のファイルのみを使用することが特徴。

SQL Server:マイクロソフトが開発している、関係データベース管理システム。企業サーバ向けの高機能なシステムから、組み込み系の小規模なシステムまで幅広く対応する。またMicrosoft Windowsと親和性が高く、ADOやADO.NETを経由して最適なバックエンドデータベースを構築できるようになっている。

CRUD:Create（生成）、Read（読み取り）、Update（更新）、Delete（削除）。ユーザインタフェースが備えるべき機能（情報の参照/検索/更新）を指す用語としても使われる。

トランザクション:互いに関連・依存する複数の処理をまとめたもの。

コミット: 複数の処理を一つの処理でまとめて行うトランザクション処理で、結果が確定することを「コミット」と言う。 またファイルの変更履歴の保存や管理を行うバージョン管理システムで、その結果を反映させることも「コミット」と呼ぶ。

ロールバック:データ更新などで障害が起こったときに、その前の状態にまで戻ることをいう。

排他制御（排他ロック）:共有資源（データやファイル）に対して複数のアクセスが見込まれる場合に、同時アクセスにより不整合が発生することを防ぐため、あるトランザクションが共有資源（データやファイル）にアクセスしている時は他トランザクションからはアクセスできないようにして直列に処理されるように制御すること。

楽観ロック:めったなことでは他者との同時更新は起きないであろう、という楽観的な前提の排他制御。データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、データの整合性を保証する方式。楽観ロックを使用する場合は、更新対象のデータがデータ取得時と同じ状態であることを判断するために、Versionを管理するためのカラム(Versionカラム)を用意する。更新時の条件として、データ取得時のVersionとデータ更新時のVersionを同じとすることで、データの整合性を保証することができる。

悲観ロック:他者が同じデータに頻繁に変更を加えるであろう、という悲観的な前提の排他制御。更新対象のデータを取得する際にロックをかけることで、他のトランザクションから更新されないようにする方式。悲観ロックを使用する場合は、トランザクション開始直後に更新対象となるレコードのロックを取得する。ロックされたレコードは、トランザクションが、コミットまたはロールバックされるまで、他のトランザクションから更新されないため、データの整合性を保証することができる。

実行計画:データベースからデータを取り出す際、どうしたらより短い時間でSQLを実行できるかを計算して導き出された、具体的な方法を「計画」としてまとめたもの。

チューニング:システムやプログラムなどを改良し、パフォーマンスの向上を図ることを言う。

パフォーマンス:コンピュータなどの機器やソフトウェア、システムなどの処理性能や実行速度、通信回線・ネットワークなどの伝送速度・容量などのことを指す。

スロークエリ:呼び出すのに時間がかかっているSQLのこと。

クエリログ:サーバが実行した全てのSQLクエリを出力するログ。

IDE（統合開発環境）:プログラミングをする際に必要なソフトウェアを統合して、1つの画面で操作できるようにしたもの。

Eclipse:統合開発環境の代表格と言える「Eclipse」は、多くの言語に対応できることが特徴。もとはJavaの統合開発環境であったが、プラグインを導入することで様々な言語で開発することが可能。日本語化することも勿論でき、ユーザーが多いため使い方に関する情報が豊富なのも安心できるポイント。

NetBeans:オープンソースの統合開発環境(IDE)。ほぼ100%Javaで実装されている。Oracleを中心としたコミュニティにより開発されているため、Java最新版にいち早く対応できる利点がある。

SpringToolSuite:Spring Framwrowkの開発元が提供しているEclipseをベースとして作成された統合開発環境(IDE)で、Spring Frameworkを利用した開発に適した機能が備えられている。Eclipseをベースとしているだけあって基本的な操作はEclipseとほぼ同じといってもいい。

DBツール:データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称。

A5:SQL Mk-2:データベース開発において生産性を向上させるべく開発されたSQL開発ツール。SQLの実行だけでなく、テーブルの編集・ストアドプロシージャの実行・ER図の作成などを行うことが出来ます。

pgAdmin:GUIでSQLを管理できる。

DBeaver:MySQL,PostgreSQL,SQLite,Oracle,MariaDB,Amazon Redshiftなど殆どの DB に対応している。またDBだけではなく，全文検索エンジンのElasticsearchやHadoopの上構築されたデータウェアハウスであるApache Hive など様々なデータ分析ツールにも対応している。

MySQL Workbench:MySQL 公式の統合 GUI ツールであり、データベースの管理/設計/開発/移行など様々なことを実現することができる。

Sequel Pro:Mac用のMySQLのデータをGUI操作で管理するためのアプリケーション。

TeamSQL:2019年6月にサービス終了。DBeaver同様、様々なDBに対応している。


■ 肩書
PM:プロジェクトマネージャー。開発プロジェクトの取りまとめを行う役割で、プロジェクトの遂行にまつわる様々な決裁権を託されている。仕事はシステムの構築ではなく、プロジェクトやメンバーのマネージメント。お客様との間で納期の取り決めなど、顧客折衝という部分でお客様との調整を行うところから、随時発生するトラブル対応の指揮やSE・PGの工程管理、メンバーの様子にも目を配りながら全体の士気を高めるようなことまで、その仕事は多岐にわたる。プロジェクトが成功するかどうかはPMの腕次第と言っても過言では無い。

PL:プロジェクトリーダー。開発プロジェクトが小規模の場合は立てないことも多い。中規模～大規模プロジェクトとなり、メンバーが増えてPMが全体に目を配ることが難しくなってくると、PLを立ててしっかりと管理ができる体制を整えていく。

PMの補佐のような役目だが、内向きな管理になることが多い。例えばSEやPGが工程を厳守するあまり、プログラムの品質が落ちていないかをチェックしたり、チーム内の各グループ間でしっかりと情報伝達が行われているかなど、より細かいところに目を向けながら、プロジェクトを動かしていく。システム仕様についてもしっかりと理解しながら、メンバーの管理もしていかなければならないので、コミュニケーション力の低いSEにはちょっと荷が重い役割。

PG（PE）:プログラマー。SEが用意した仕様書をもとにプログラミング・単体テストをするのが主な作業。近年ではPGが担当する工程を人件費の安い海外諸国に発注するオフショア開発も盛んになっています。

SE:システムエンジニア。プロジェクトチームの中ではメンバーという扱いになり、開発メンバーの一員として担当作業が割り振られる。PMが作成した工程表に沿って、自分の担当業務をこなしていく。主な作業は担当のお客様と打ち合わせしていく中で、要件の確定や仕様の検討など、主に上流工程の仕事をする。ただし”SE兼PG”として、SEがPGの役割を同時にこなしていくこともよくある。プロジェクトを成功させるためにはPMの存在が重要だと先に述べましたが、SEも「言われたことだけ、与えられたことだけをやればいい」という受け身の精神ではなく、能動的に動くことが求められる。SEだとしても工程と品質に対する意識は高くしながら、仕事をしていかなければならない。

デザイナー:Webサイトの見栄えだけではなく、そのサイトの目的やコンセプトを考慮し、ユーザーにとって分かりやすく使いやすいデザインの作成をする。一般的に、Webディレクターを中心にプロジェクトチームを組み、他の業務を果たすスタッフと連携して1つのWebサイトを作成する。

エンジニア:工学（エンジニアリング）に関する専門的な知識やスキルを持った人材、技術者。

フロントエンド・エンジニア:Webの見た目を作る。

サーバーサイド・エンジニア:サーバーシステムの設計・構築・運用・保守を行う

バックエンド・エンジニア:ユーザーからは目に見えないアプリケーションの裏側にある処理を作る。


■ UI（ユーザーインターフェース）
UI:ユーザーと製品・サービスとの接点。サイトの見た目や使いやすさ。

CUI:キャラクターユーザーインターフェース。コードをパソコンに読み込ませることでパソコンに命令を出す。

GUI:グラフィカルユーザーインターフェース。アイコンなどをクリックすることでパソコンに命令を出す。


■ ファイル／ディレクトリ
ファイル:コンピューターで記録・管理される情報の単位

拡張子:ファイルの種類を指す目印。

ディレクトリ:ファイルを整理する入れ物

ルート・ディレクトリ:階層型ファイル構造における最上階層のディレクトリ（あるいはフォルダ）のこと。 階層をたどったとき、その根底（ルート）となる部分。

カレント・ディレクトリ:今使っているディレクトリ

パス:ファイルやフォルダの場所をあらわす文字列。住所のような物。

絶対パス:ドメイン名/フォルダ名/ファイル名 と書く。誰から見ても変わらない住所。

相対パス:今いるところから見た住所。../ と書くことで、今いるディレクトリ階層の一個上の階層に移動することをあらわす。


■ ネットワーク
LAN:Local Area Network（ローカルエリアネットワーク）の略。同じ建物の中などの限定された範囲で接続できるネットワークのこと。

WAN:Wide Area Network（ワイドエリアネットワーク）の略。遠く離れた場所とつながったネットワークのことで、だれもが自由に接続できるネットワーク。 WANは簡単に言えばLANとLANをつないだ大きなネットワークで、インターネットもWANのひとつ。世界中のコンピュータ同士がくもの巣のようにつながっている。WANを利用することで世界中の人とのコミュニケーションが可能。

クライアント:サービスを利用するコンピュータ

サーバー:サービスを提供するコンピュータ。これが無いとクライアントは動かない。


■ 各種プロトコル
HTTP:Webページを構成するHTMLなどのコンテンツの送受信に用いられている。World Wide Webにおいて、 WebブラウザとWebサーバ間での転送に用いられる。ハイパーテキストを転送するための通信プロトコルである。ハイパーテキストだけでなく、バイナリ形式の画像、音声などの様々なデータを転送可能である。

FTP:インターネットの誕生と共に使用され始めた古の頃からの歴史ある技術である。ファイルを転送するための通信プロトコルである。インターネットを使用してファイルを送受信するための仕組みである。ftpを使って通信をするコンピュータやソフトを「ftpクライアント」と呼び、受け入れる側のコンピュータ(接続先)を「ftpサーバ」と呼ぶ。ファイルをやり取りする時に使用するftpクライアント側のソフトを「ftpソフト」と呼ぶ。

HTTPS:基本的な用途や概要はhttpと一緒である。厳密に言うとhttpsは通信プロトコルではないらしい。SSL/TLSプロトコルを用いて行われるhttp通信を行うことを指す。通信内容がTSL(Transport Layer Security)によって暗号化されている。セキュアで安心である。

SSL:Secure Socket Layer。通信を暗号化する。インターネット（ブラウザとWEB間）でのやりとりが暗号化される。

SSH:Secure Shell。通信を暗号化する。他のコンピュータを遠隔操作する際のやりとりが暗号化される。

ポート、ポート番号:ネットワークでデータを通信するための扉のようなものだと思うとわかりやすい。ポート番号はその扉の番号。

HTTP、FTP、SSHの各ポート番号:HTTP→TCP 80  FTP→TCP 21  SSH→TCP 22

ファイアウォール:企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための“防火壁”

TCP:Transmission Control Protocol。送ったデータが相手に届いたか、その都度確認しながら通信するやり方。安産性重視な通信なため、信頼性は高いが転送速度が低いという特徴がある。同じような物にUDPというものがあり、こちらはスピード重視、確認を取らないで送ったら送りっぱなしになる。


■ IPアドレス
IPアドレス:IPアドレスとは、他のパソコン、スマホやタブレットと区別するためのものです。ネットワーク上で同じIPアドレスというのはありえません。

グローバルIPアドレス:グローバルアドレスとは、インターネット上のIPアドレスです。たいていの場合、インターネットサービスプロバイダによって割り当てられます。グローバルアドレスには、人間にもわかりやすいようにホスト名がついている場合が多く、そのホストの情報から、地域や利用しているプロバイダがわかったりします。

プライベートIPアドレス:学校や企業、家庭内などにおいて、同じ建物内の複数の人が同時にインターネットするためにはLANが必要ですよね。そのネットワーク内のそれぞれのパソコンを区別するためにプライベートアドレスが必要になります。


■ ドメイン
ドメイン:インターネット上に存在するコンピューターやネットワークを識別するための名前。人がインターネット上で通信先を指定する際に必要な識別子・メールアドレス、URLなど。（IPアドレスはコンピューターやルーターなどの端末が、インターネット上で通信先を指定する上で必要な識別子、ネットワーク機器に付与されるもの）

DNS:ドメイン名からipアドレスに変換される動作を「名前解決」と呼びますが、名前解決を行うために使われるシステムのことを「DNS(Domain Name System)」と言います。

VPN:VPN接続とは、インターネット上に仮想の専用線を設定し、特定の人のみが利用できる専用ネットワークです。接続したい拠点（支社）に専用のルーターを設置し、相互通信をおこなうことができます。また、「トンネリング」「暗号化」「承認」を設定することで、セキュリティ上安全にデータのやり取りを行うことができます。
「トンネリング」とは、データの送信者と受信者の間に仮想的なトンネル（トンネリング）を作り通信をおこないます。
「暗号化」は、やり取りするデータを盗聴・改ざん等ができないよう鍵をかけることができます。
「承認」は、信者と受信者同士がお互いに正しい相手だと確かめる方法です。

ブリッジ:ルータのモードをブリッジモードにすると、ルータのルータとしての機能（交通整理機能）が無効になります。
そうすると残るのはブリッジとしての機能です。ルータがスイッチングハブとして（無線LANルータの場合は無線LANアクセスポイントとして）動くようになるのです。コンピュータをネットにつなげるときに使う。

プロキシサーバー:プロキシサーバーとは、コンピューターに代わってインターネットに接続しサイトへアクセスするサーバーを指します。プロキシサーバーは社内LANと外部インターネットの間に設置し、URLをフィルタリングしたり匿名性を確保したりします。


■ 電子メール
SMTP:メールを相手のメールサーバーまで届ける仕組み（送信側）。

POP:メールを自動的にダウンロードする仕組み（受信側）。メールをダウンロードした後は、サーバーにメールが残らない。

IMAP:POPと同じ仕組み。メールはダウンロードではなく、サーバーにあるもののコピーを取り込むので、サーバーにメール本体は残ったまま。

■ セッションとクッキー
セッション:クッキーと同じくサーバー上の一時ディレクトリに保存されたデータのこと。このデータは、ユーザーがWebサイトにいる間、サイト上のすべてのページで利用可能になる。クッキーは「誰が」の情報を取得し、セッションは「何をしたか？」という情報を取得しています。

クッキー:ユーザーのコンピューターに保存される小さなファイルのこと。クッキーは自動的にクッキーファイル（ブラウザのメモリ）に格納され、1.クッキーが送信されたサーバーの名前 2.クッキーの有効期間 3.値 を保存している。

キャッシュ:よく使うデータへのアクセスを速くするために、より高速な記憶装置に一時的に保存する仕組みのことを指します。頻繁にアクセスされるコンテンツを保存し、その情報を呼び出すことで表示速度を高速化します。


■ DB（データベース）について
インデックス:データがある場所につける目印。データベースの性能を向上させる方法の一つです。インデックスは「探すレコードを識別するデータの項目」「対象レコードの格納位置を示すポインタ」で構成されており、これを利用してデータの格納位置を特定し、その位置を直接アクセスする事で、表の検索速度を上げることができます。インデックスが設定されていない場合の検索では、テーブルの最初から順番に1件ずつ探すため、時間がかかります。


■ テストについて
フロー:流れや流動という意味。 キャッシュフローやデータフローなど、流れに関する用語として、経営用語やIT用語として多用されている


■ チケット管理ツール
タスク:やるべきこと


■ バージョン管理
Git:実際の実装とデバッグ用の追加部分を別々にコミットする事ができるので、共有されたくない情報は別で管理したりでき、修正もしやすい。

SVN:コミットした内容がすぐ反映されるので、チーム開発において一度コミットした情報を修正が大変

デグレ:新しいバージョンのソフトウェアの品質が、以前より悪くなること。 また、以前修正した不具合やバグが再発・復活すること

マージツール:バージョン管理されているファイル群に対して行われた変更を統合するツール。